{"version":3,"sources":["components/forecast-service-context/forecast-service-context.js","components/hoc/with-forecast-service.js","actions/index.js","components/header/index.js","components/header/header.js","components/input/input.js","components/input/index.js","components/spinner/index.js","components/spinner/spinner.js","components/today-weather/index.js","components/today-weather/today-weather.js","components/week-weather/index.js","components/week-weather/week-weather.js","components/history/history.js","components/history/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/error-boundry.js","components/error-boundry/index.js","App.js","reducers/index.js","store.js","index.js","services/forecast-service.js"],"names":["React","createContext","ForecastServiceProvider","Provider","ForecastServiceConsumer","Consumer","withForecastService","Wrapped","props","react_default","a","createElement","forecastService","Object","assign","fetchNewCity","city","type","payload","updateHistory","fetchWeatherThunk","dispatch","getWeather","then","data","getWeekWeather","catch","err","errorCatched","Header","className","Input","state","inputValue","onChangeHandler","e","_this","setState","target","value","onClickButtonHandler","_this$props","style","width","placeholder","aria-label","aria-describedby","onChange","this","id","onClick","Component","connect","_ref","currentCity","_ref2","bindActionCreators","Spinner","TodayWeather","todayWeather","humidity","temp","temp_max","temp_min","weather","icon","fontSize","dateFns","format","Date","scope","src","concat","alt","react_router_dom","to","process","components_spinner","WeekWeather","weekWeather","undefined","list","map","item","index","key","addDays","description","main","mapDispatchToProps","updateWeatherFromHirtory","History","forecastHistory","_item$todayWeather","ErrorIndicator","class","ErrorBoundry","hasError","components_error_indicator","children","App","components_header","components_input","components_error_boundry","react_router","path","component","exact","components_history","initialState","reducer","arguments","length","action","objectSpread","newHistoryItem","newHistory","cityId","cityFounded","find","toConsumableArray","slice","idx","console","log","filter","updateWeatherFromHistory","store","createStore","applyMiddleware","thunk","logger","_apiKey","_apiBase","getData","_callee","url","response","regenerator_default","wrap","_context","prev","next","axios","get","sent","abrupt","t0","stop","_callee2","res","_context2","_transformWeather","_callee3","_context3","_transformWeekWeather","name","ReactDOM","render","es","basename","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c1aa4d8f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst {\r\n  Provider: ForecastServiceProvider,\r\n  Consumer: ForecastServiceConsumer\r\n} = React.createContext();\r\n\r\nexport { ForecastServiceProvider, ForecastServiceConsumer };","import React from \"react\";\r\nimport { ForecastServiceConsumer } from \"../forecast-service-context\";\r\n\r\nconst withForecastService = () => Wrapped => {\r\n    return props => {\r\n      return (\r\n        <ForecastServiceConsumer>\r\n          {forecastService => {\r\n            return <Wrapped {...props} forecastService={forecastService} />;\r\n          }}\r\n        </ForecastServiceConsumer>\r\n      );\r\n    };\r\n  };\r\n  \r\n  export default withForecastService;","const fetchTodayWeather = todayWeather => {\r\n  return {\r\n    type: \"TODAY_WEATHER_FETCH_SUCCESS\",\r\n    payload: todayWeather\r\n  };\r\n};\r\n\r\nconst fetchWeekWeather = weekWeather => {\r\n  return {\r\n    type: \"WEEK_WEATHER_FETCH_SUCCESS\",\r\n    payload: weekWeather\r\n  };\r\n};\r\n\r\nconst fetchNewCity = city => {\r\n  return {\r\n    type: \"NEW_CITY_INPUT\",\r\n    payload: city\r\n  };\r\n};\r\n\r\nconst fetchingStarted = () => {\r\n  return {\r\n    type: \"FETCHING_STARTED\",\r\n  };\r\n};\r\n\r\nconst fetchingFinished = () => {\r\n  return {\r\n    type: \"FETCHING_FINISHED\",\r\n  };\r\n};\r\n\r\nconst updateHistory = () => {\r\n  return {\r\n    type: \"UPDATE_HISTORY\"\r\n  };\r\n};\r\n\r\nconst updateWeatherFromHirtory = (id) => {\r\n  return {\r\n    type: \"UPDATE_WEATHER_FROM_HISTORY\",\r\n    payload: id\r\n  };\r\n}\r\n\r\nconst fetchWeatherThunk = forecastService => city => dispatch => {\r\n  dispatch(fetchingStarted());\r\n  forecastService\r\n    .getWeather(city)\r\n    .then(data => {\r\n      dispatch(fetchTodayWeather(data));\r\n    })\r\n    .then(() => {\r\n      forecastService\r\n        .getWeekWeather(city)\r\n        .then(data => {\r\n          dispatch(fetchWeekWeather(data));\r\n          dispatch(fetchingFinished());\r\n        })\r\n        .then(() => {\r\n          dispatch(updateHistory());\r\n        });\r\n    }).catch ((err) => dispatch(errorCatched()));\r\n};\r\n\r\nconst errorCatched = () => {\r\n  return{\r\n    type: 'ERROR_CATCHED',\r\n    payload: true\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchNewCity,\r\n  fetchWeatherThunk,\r\n  updateHistory,\r\n  updateWeatherFromHirtory,\r\n  errorCatched\r\n};\r\n","import Header from \"./header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-primary\">\r\n      <span className=\"navbar-brand\">FORECAST APP</span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { fetchNewCity, fetchWeatherThunk } from \"./../../actions\";\r\nimport { withForecastService } from \"../hoc\";\r\n\r\nclass Input extends Component {\r\n  state = {\r\n    inputValue: \"\"\r\n  };\r\n\r\n  onChangeHandler = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  onClickButtonHandler = () => {\r\n    const { fetchNewCity, fetchWeatherThunk } = this.props;\r\n    const { inputValue } = this.state;\r\n\r\n    if (inputValue !== \"\") {\r\n      fetchNewCity(inputValue);\r\n      fetchWeatherThunk(inputValue);\r\n      // fetchWeekWeatherThunk(inputValue);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-group pl-3 pt-3 pb-3\" style={{ width: 500 }}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Input city here...\"\r\n          aria-label=\"Example text with button addon\"\r\n          aria-describedby=\"button-addon1\"\r\n          onChange={this.onChangeHandler}\r\n        />\r\n        <div className=\"input-group-prepend\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            id=\"button-addon1\"\r\n            onClick={this.onClickButtonHandler}\r\n          >\r\n            Search city forecast\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentCity }) => {\r\n  return {\r\n    currentCity\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { forecastService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchWeatherThunk: fetchWeatherThunk(forecastService),\r\n      fetchNewCity: fetchNewCity\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default withForecastService()(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Input)\r\n);\r\n","import Input from \"./input\";\r\n\r\nexport default Input;\r\n","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\">Loading...</div>\r\n};\r\n\r\nexport default Spinner;\r\n","import TodayWeather from \"./today-weather\";\r\n\r\nexport default TodayWeather;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport dateFns from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Spinner from \"../spinner\";\r\n\r\nconst TodayWeather = ({ todayWeather }) => {\r\n  if (todayWeather) {\r\n    const {\r\n      city,\r\n      humidity,\r\n      temp,\r\n      temp_max,\r\n      temp_min,\r\n      weather,\r\n      icon\r\n    } = todayWeather;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title\">\r\n            {city}\r\n            <span className=\"ml-3\" style={{ fontSize: 25 }}>\r\n              {dateFns.format(new Date(), \"D MMMM YYYY\")}\r\n            </span>\r\n          </h2>\r\n          <table className=\"table table-striped\" style={{ width: 500 }}>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\" />\r\n                <td>\r\n                  <img\r\n                    src={`http://api.openweathermap.org/img/w/${icon}`}\r\n                    alt=\"img\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Weather</th>\r\n                <td>{weather}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Temperature</th>\r\n                <td>{temp}°C</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Humidity</th>\r\n                <td>{humidity}%</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Temperature max/min</th>\r\n                <td>\r\n                  {temp_max}/{temp_min}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <Link to={process.env.PUBLIC_URL + \"/week\"}>\r\n            <span className=\"btn btn-primary\">Show week forecast</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ todayWeather }) => {\r\n  return {\r\n    todayWeather\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodayWeather);\r\n","import WeekWeather from \"./week-weather\";\r\n\r\nexport default WeekWeather;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport dateFns from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Spinner from \"../spinner\";\r\n\r\nconst WeekWeather = ({ weekWeather }) => {\r\n  if (weekWeather.city !== undefined) {\r\n    const { city, list } = weekWeather;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h2 className=\"card-title\">{city}</h2>\r\n          <table className=\"table table-striped\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                {list.map((item, index) => (\r\n                  <td key={index} className=\"font-weight-bold\">\r\n                    {dateFns.format(\r\n                      dateFns.addDays(new Date(), index),\r\n                      \"D MMMM YYYY\"\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\" />\r\n                {list.map((item, index) => (\r\n                  <td key={index} className=\"font-weight-bold\">\r\n                    <img\r\n                      src={`http://api.openweathermap.org/img/w/${\r\n                        item.weather[0].icon\r\n                      }`}\r\n                      alt=\"img\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Weather</th>\r\n                {list.map((item, index) => (\r\n                  <td key={index}>{item.weather[0].description}</td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Temperature</th>\r\n                {list.map((item, index) => (\r\n                  <td key={index}>{item.main.temp}°C</td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Humidity</th>\r\n                {list.map((item, index) => (\r\n                  <td key={index}>{item.main.humidity}%</td>\r\n                ))}\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Temperature max/min</th>\r\n                {list.map((item, index) => (\r\n                  <td key={index}>\r\n                    {item.main.temp_max}°C/{item.main.temp_max}°C\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n            <span className=\"btn btn-primary\">Go back</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ weekWeather }) => {\r\n  return {\r\n    weekWeather\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WeekWeather);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateWeatherFromHirtory } from \"./../../actions\";\r\n\r\nimport \"./history.css\";\r\n\r\nconst History = ({ forecastHistory, updateWeatherFromHirtory }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title\">Forecast History</h2>\r\n      </div>\r\n      <div className=\"table table-striped\">\r\n          <div className=\" d-flex\">\r\n            {forecastHistory.map(item => {\r\n              const { id, city, weather, temp, icon } = item.todayWeather;\r\n\r\n              return (\r\n                <div\r\n                  key={id}\r\n                  className=\"forecast-card d-flex justify-content-between\"\r\n                  onClick={() => updateWeatherFromHirtory(id)}\r\n                >\r\n                  <div>\r\n                    <h4>{city}</h4>\r\n                    <p>{weather}</p>\r\n                    <p>{temp}°C</p>\r\n                  </div>\r\n                  <div className=\"forecast-card-icon-block\">\r\n                    <img\r\n                      className=\"forecast-card-icon\"\r\n                      src={`http://api.openweathermap.org/img/w/${icon}`}\r\n                      alt=\"img\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ forecastHistory }) => {\r\n  return { forecastHistory };\r\n};\r\n\r\nconst mapDispatchToProps = { updateWeatherFromHirtory };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(History);\r\n","import History from \"./history\";\r\n\r\nexport default History;\r\n","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;","import React from \"react\";\r\nimport \"./error-indicator.css\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <div>\r\n        <i class=\"fas fa-cloud icon\" />\r\n      </div>\r\n      <span className=\"error-title\">Forecast App Error</span>\r\n      <span className=\"error-text\">\r\n        Check your input and try again\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { errorCatched } from \"./../../actions\";\r\n\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  componentDidCatch() {\r\n    this.props.errorCatched();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ hasError }) => {\r\n  return {\r\n    hasError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { errorCatched };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ErrorBoundry);\r\n","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withForecastService } from \"./components/hoc/\";\nimport { fetchWeatherThunk, updateHistory } from \"./actions\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Header from \"./components/header\";\nimport Input from \"./components/input\";\nimport TodayWeather from \"./components/today-weather\";\nimport WeekWeather from \"./components/week-weather\";\nimport History from \"./components/history\";\nimport ErrorBoundry from \"./components/error-boundry\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { fetchWeatherThunk } = this.props;\n    fetchWeatherThunk(\"Kiev\");\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Input />\n        <ErrorBoundry>\n          <Switch>\n            <Route path={process.env.PUBLIC_URL + \"/\"} component={TodayWeather} exact />\n            <Route path={process.env.PUBLIC_URL + \"/week\"} component={WeekWeather} />\n            <Route path={process.env.PUBLIC_URL + \"/\"} />\n          </Switch>\n        </ErrorBoundry>\n        <History />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ currentCity }) => {\n  return { currentCity };\n};\n\nconst mapDispatchToProps = (dispatch, { forecastService }) => {\n  return bindActionCreators(\n    {\n      fetchWeatherThunk: fetchWeatherThunk(forecastService),\n      updateHistory: updateHistory\n    },\n    dispatch\n  );\n};\n\nexport default withForecastService()(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","const initialState = {\r\n  currentCity: \"\",\r\n  todayWeather: {},\r\n  weekWeather: {},\r\n  forecastHistory: [],\r\n  hasError: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const updateHistory = () => {\r\n    let newHistoryItem = {\r\n      city: state.currentCity,\r\n      todayWeather: state.todayWeather,\r\n      weekWeather: state.weekWeather\r\n    };\r\n\r\n    let newHistory = [];\r\n\r\n    const cityId = state.todayWeather.id;\r\n    const cityFounded = state.forecastHistory.find(\r\n      city => city.todayWeather.id === cityId\r\n    );\r\n\r\n    if (state.forecastHistory.length >= 5 && cityFounded === undefined) {\r\n      newHistory = [...state.forecastHistory.slice(1), newHistoryItem];\r\n    } else if (state.forecastHistory.length <= 5 && cityFounded === undefined) {\r\n      newHistory = [...state.forecastHistory, newHistoryItem];\r\n    } else if (state.forecastHistory.length <= 5 && cityFounded !== undefined) {\r\n      const idx = cityFounded.todayWeather.id;\r\n      console.log(idx);\r\n      newHistory = [\r\n        ...state.forecastHistory.filter(city => city.todayWeather.id !== idx),\r\n        newHistoryItem\r\n      ];\r\n    }\r\n\r\n    return newHistory;\r\n  };\r\n\r\n  const updateWeatherFromHistory = id => {\r\n    const cityFounded = state.forecastHistory.find(\r\n      city => city.todayWeather.id === id\r\n    );\r\n    console.log(cityFounded);\r\n\r\n    return {\r\n      todayWeather: cityFounded.todayWeather,\r\n      weekWeather: cityFounded.weekWeather,\r\n      currentCity: cityFounded.city\r\n    };\r\n  };\r\n\r\n  switch (action.type) {\r\n    case \"TODAY_WEATHER_FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        todayWeather: action.payload\r\n      };\r\n    case \"WEEK_WEATHER_FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        weekWeather: action.payload\r\n      };\r\n    case \"ERROR_CATCHED\":\r\n      return {\r\n        ...state,\r\n        hasError: action.payload\r\n      };\r\n    case \"NEW_CITY_INPUT\":\r\n      return {\r\n        ...state,\r\n        currentCity: action.payload\r\n      };\r\n    case \"FETCHING_STARTED\":\r\n      return {\r\n        ...state,\r\n        hasError: false\r\n      };\r\n    case \"FETCHING_FINISHED\":\r\n      return {\r\n        ...state\r\n      };\r\n    case \"UPDATE_HISTORY\":\r\n      return {\r\n        ...state,\r\n        forecastHistory: updateHistory()\r\n      };\r\n    case \"UPDATE_WEATHER_FROM_HISTORY\":\r\n      return {\r\n        ...state,\r\n        ...updateWeatherFromHistory(action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport ForecastService from \"./services/forecast-service\";\nimport { ForecastServiceProvider } from \"./components/forecast-service-context\";\n\nimport store from \"./store\";\n\nconst forecastService = new ForecastService();\n\nReactDOM.render(\n  <Provider store={store}>\n    \n      <Router basename={process.env.PUBLIC_URL}>\n        <ForecastServiceProvider value={forecastService}>\n          <Router>\n            <App />\n          </Router>\n        </ForecastServiceProvider>\n      </Router>\n    \n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\r\n\r\nexport default class ForecastService {\r\n  _apiKey = \"b4655c5e515d5be817ed70a0a7f55407\";\r\n  _apiBase = \"//api.openweathermap.org/data/2.5/\";\r\n\r\n  getData = async url => {\r\n    try {\r\n      const response = await axios.get(url);\r\n      return response.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  getWeather = async city => {\r\n    const res = await this.getData(\r\n      `${this._apiBase}weather?q=${city}&APPID=${this._apiKey}&units=metric`\r\n    );\r\n    return this._transformWeather(res);\r\n  };\r\n\r\n  getWeekWeather = async city => {\r\n    const res = await this.getData(\r\n      `${this._apiBase}forecast?q=${city}&APPID=${this._apiKey}&units=metric`\r\n    );\r\n    return this._transformWeekWeather(res);\r\n  };\r\n\r\n  _transformWeather = res => {\r\n    return {\r\n      id: res.id,\r\n      city: res.name,\r\n      weather: res.weather[0].description,\r\n      icon: res.weather[0].icon,\r\n      temp: res.main.temp,\r\n      humidity: res.main.humidity,\r\n      temp_max: res.main.temp_max,\r\n      temp_min: res.main.temp_min\r\n    };\r\n  };\r\n\r\n  _transformWeekWeather = res => {\r\n    return {\r\n      city: res.city.name,\r\n      list: [\r\n        res.list[0],\r\n        res.list[7],\r\n        res.list[15],\r\n        res.list[23],\r\n        res.list[31],\r\n        res.list[39]\r\n      ]\r\n    };\r\n  };\r\n}\r\n"],"sourceRoot":""}